<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yscoco.robot.dao.HouseEntityMapper">
    <resultMap id="BaseResultMap" type="com.yscoco.robot.entity.HouseEntity">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="house_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="longitude" javaType="java.lang.Double" jdbcType="DOUBLE"/>
            <arg column="latitude" javaType="java.lang.Double" jdbcType="DOUBLE"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="state" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="modify_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, house_name, longitude, latitude, create_time, state, modify_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from house
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from house
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.yscoco.robot.entity.HouseEntity">
    insert into house (id, house_name, longitude, 
      latitude, create_time, state, 
      modify_time)
    values (#{id,jdbcType=BIGINT}, #{houseName,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, 
      #{latitude,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.yscoco.robot.entity.HouseEntity">
        insert into house
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="houseName != null">
                house_name,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="houseName != null">
                #{houseName,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=DOUBLE},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=DOUBLE},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yscoco.robot.entity.HouseEntity">
        update house
        <set>
            <if test="houseName != null">
                house_name = #{houseName,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=DOUBLE},
            </if>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=DOUBLE},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yscoco.robot.entity.HouseEntity">
    update house
    set house_name = #{houseName,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="findPageHouse" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from house where 1=1
        <if test="houseName != null">
            and house_name LIKE concat('%',#{houseName},'%')
        </if>
    </select>
    <select id="findAreaHouse" resultType="com.yscoco.robot.entity.HouseEntity">
        SELECT<include refid="Base_Column_List"/>,ROUND(
        6378.138 * 2 * ASIN(
        SQRT(
        POW(
        SIN(
        (
        #{latitude,jdbcType = DOUBLE} * PI() / 180 - latitude * PI() / 180
        ) / 2
        ),
        2
        ) + COS( #{latitude,jdbcType = DOUBLE} * PI() / 180) * COS(latitude * PI() / 180) * POW(
        SIN(
        (
        #{longitude,jdbcType = DOUBLE} * PI() / 180 - longitude * PI() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        ) AS distance FROM
        `house` having distance <![CDATA[<=]]> #{juli,jdbcType=DOUBLE} ORDER BY distance asc;
    </select>
</mapper>